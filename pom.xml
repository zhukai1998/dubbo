<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.zhukai</groupId>
    <artifactId>dubbo</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>dubbo-service</module>
        <module>dubbo-web</module>
    </modules>

    <properties>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>
        <dubbo.springboot.version>3.0.7</dubbo.springboot.version>
        <curator.framework.version>5.2.1</curator.framework.version>
        <curator.recipes.version>5.2.1</curator.recipes.version>
        <zookeeper.version>3.8.0</zookeeper.version>
        <curator.discovery.version>5.2.1</curator.discovery.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.7</version>
        <relativePath/>
    </parent>

    <!-- 全局 -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!--
    使用 dependencyManagement 可以统一管理项目的版本号，确保应用的各个依赖和版本一致，
    不用每个模块项目都弄一个版本号，不利于管理，当需要变更版本号的时候只需要在父类容器里更新，不需要任何一个子项目的修改；
    如果某个子项目需要另外一个特殊的版本号时，只需要在自己的模块 dependencies中 声明一个版本号即可。
    子类就会使用子类声明的版本号，不继承于父类版本号。
    1）dependencies相对于 dependencyManagement，所有声明在 dependencies 里的依赖都会自动引入，并默认被所有的子项目继承。
    2）dependencyManagement 里只是声明依赖，并不自动实现引入，因此子项目需要显示的声明需要用的依赖。如果不在子项目中声明依赖，
        是不会从父项目中继承下来。只有在子项目中写明了该依赖项，并且没有指定具体版本，才会从父项目中继承该项。
        并且 version 和 scope 都读取自父 pom。
        另外如果子项目中指定了版本号，那么会使用子项目中指定的 jar 版本
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.recipes.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${curator.discovery.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>



</project>